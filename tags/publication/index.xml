<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>publication on WASUP</title>
    <link>https://was-up.github.io/tags/publication/</link>
    <description>Recent content in publication on WASUP</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2019 01:05:16 +0000</lastBuildDate>
    
	<atom:link href="https://was-up.github.io/tags/publication/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Towards a Pattern Language for the Masters Student</title>
      <link>https://was-up.github.io/publications/msc_patterns/</link>
      <pubDate>Thu, 07 Nov 2019 01:05:16 +0000</pubDate>
      
      <guid>https://was-up.github.io/publications/msc_patterns/</guid>
      <description>Every year, thousands of new students begin their Masters in STEM-related topics. Despite being regarded as a common occurrence by the faculty, it represents the culmination of years of studying and preparation for their professional life. Notwithstanding, these students face well-known recurrent problems: how to choose a topic, how to choose an advisor, how to start researching, and how to deal with all the unknowns associated with academic research. Although there are several books on how to write a thesis, most of them avoid prescriptive recommendations on topics beyond research \emph{per se} or focus on doctoral students, for which the duration and motivation are significantly different.</description>
    </item>
    
    <item>
      <title>Live Software Development</title>
      <link>https://was-up.github.io/publications/live_sd/</link>
      <pubDate>Thu, 07 Nov 2019 00:55:25 +0000</pubDate>
      
      <guid>https://was-up.github.io/publications/live_sd/</guid>
      <description>Live Programming is an idea pioneered by programming environments from the earliest days of computing, such as those for Lisp and Smalltalk. One thing they had in common is liveness: an always accessible evaluation and nearly instantaneous feedback, usually focused on coding activities. In this paper, we argue for Live Software Development (LiveSD), bringing liveness to software development activities beyond coding, to make software easier to visualize, simpler to understand, and faster to evolve.</description>
    </item>
    
  </channel>
</rss>